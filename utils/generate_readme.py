from argparse import ArgumentParser
import json
import os
import sys

if __name__ == "__main__":
    parser = ArgumentParser("Generates a README.md by merging markdown files.")
    parser.add_argument(
        "md_file", nargs="*",
        help="path to a Markdown file.",
    )
    parser.add_argument(
        "--proj-title", dest="proj_title", required=False,
        help="Project title."
    )
    parser.add_argument(
        "--out", dest="out", default="README.md",
        help="Project title."
    )

    args = parser.parse_args()

    with open("info.json", "r") as fh:
        info = json.load(fh)

    #md_files = [arg for arg in sys.argv[1:]]
    project_name = args.proj_title or info["repository"]
    notes = ["[//]: # (This file was generated by ./utils/generate_readme.py!)"]

    release_badges = ["![Release](https://img.shields.io/badge/release-v%s-blue)" % info["version"]]
    language_badges = []
    for language in info["languages"]:
        language_badges += [
            "![%s](https://img.shields.io/badge/%s-%s-blue)" % (
                language.title(), language, "%20|%20".join([version for version in info["languages"][language]])
            )
        ]
    platform_badges = ["![Platform](https://img.shields.io/badge/platform-%s-lightgrey)" % "%20%7C%20".join(info["platforms"])]
    build_badges = ["![Build](https://github.com/%s/%s/workflows/build/badge.svg?branch=master)" % (info["organization"], info["repository"])]

    badges = [
        *release_badges,
        *language_badges,
        *platform_badges,
        *build_badges
    ]

    md_merged = "\n".join([
        *notes,
        "",
        *badges,
        "",
        "# %s" % project_name,
        "",
        ""
    ])
    for md_file in args.md_file:
        if not os.path.exists(md_file):
            raise RuntimeError("File '%s' does not exist!" % md_file)
        with open(md_file) as fh:
            md_merged += "".join(fh.readlines()) + "\n"

    with open (args.out, "w") as fp: 
        fp.write(md_merged)
